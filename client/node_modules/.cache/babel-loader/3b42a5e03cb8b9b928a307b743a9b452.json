{"ast":null,"code":"var _jsxFileName = \"/home/evan/Desktop/Cyber-Threat-Visualization/client/src/VisualizationMap.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nconst REACT_APP_GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst mapStyles = {\n  width: '75%',\n  height: '75%'\n};\n\nclass VisualizationMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ip_addresses: [],\n      location_data: [],\n      done_loading_data: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(REACT_APP_GOOGLE_MAPS_API_KEY);\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: 48.00,\n        lng: -122.00\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), this.props.location_data.map(location => {\n      return React.createElement(Marker, {\n        position: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: REACT_APP_GOOGLE_MAPS_API_KEY\n})(VisualizationMap);","map":{"version":3,"sources":["/home/evan/Desktop/Cyber-Threat-Visualization/client/src/VisualizationMap.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","REACT_APP_GOOGLE_MAPS_API_KEY","process","env","mapStyles","width","height","VisualizationMap","state","ip_addresses","location_data","done_loading_data","componentDidMount","console","log","render","props","google","lat","lng","map","location","latitude","longitude","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AAGA,MAAMC,6BAA6B,GAAGC,OAAO,CAACC,GAAR,CAAYF,6BAAlD;AAEA,MAAMG,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;;AAKA,MAAMC,gBAAN,SAA+BV,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCW,KADqC,GAC7B;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,iBAAiB,EAAE;AAHf,KAD6B;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYb,6BAAZ;AACH;;AAGDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,GAAD;AACI,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MADvB;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,KAAK,EAAEb,SAHX;AAII,MAAA,aAAa,EAAE;AAAEc,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE;AAAED,QAAAA,GAAG,EAAE,KAAP;AAAcC,QAAAA,GAAG,EAAE,CAAC;AAApB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQK,KAAKH,KAAL,CAAWN,aAAX,CAAyBU,GAAzB,CAA6BC,QAAQ,IAAI;AACtC,aAAO,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAI;AAAEH,UAAAA,GAAG,EAAEG,QAAQ,CAACC,QAAhB;AAA0BH,UAAAA,GAAG,EAAEE,QAAQ,CAACE;AAAxC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CARL,CADJ;AAeH;;AA5BoC;;AA+BzC,eAAexB,gBAAgB,CAAC;AAC5ByB,EAAAA,MAAM,EAAEvB;AADoB,CAAD,CAAhB,CAEZM,gBAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\n\nconst REACT_APP_GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n\nconst mapStyles = {\n    width: '75%',\n    height: '75%',\n};\n\nclass VisualizationMap extends Component {\n    state = {\n        ip_addresses: [],\n        location_data: [],\n        done_loading_data: false\n    };\n\n    componentDidMount() {\n        console.log(REACT_APP_GOOGLE_MAPS_API_KEY)\n    }\n\n\n    render() {\n        return (\n            <Map\n                google={this.props.google}\n                zoom={8}\n                style={mapStyles}\n                initialCenter={{ lat: 47.444, lng: -122.176}}\n            >\n                <Marker position={{ lat: 48.00, lng: -122.00}} />\n\n                {this.props.location_data.map(location => {\n                    return <Marker position = {{ lat: location.latitude, lng: location.longitude }}/>\n                })}\n\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: REACT_APP_GOOGLE_MAPS_API_KEY\n})(VisualizationMap);\n"]},"metadata":{},"sourceType":"module"}