{"ast":null,"code":"var _jsxFileName = \"/home/evan/Desktop/Cyber-Threat-Visualization/client/src/IPAddresses.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass IPAddresses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ip_addresses: null\n    };\n\n    this.fetchIPs = async () => {\n      await axios.get(\"http://localhost:5000/fetch_ips\").then(response => {\n        //let first_ip = response.data.data.ip[0];\n        // let all_ips = response['all_ip_addresses'];\n        let all_ips = response.data;\n        console.log(\"all_ips = \" + all_ips);\n        this.setState({\n          ip_addresses: all_ips\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchIPs();\n  } // oldFetchIPs = async () => {\n  //\n  //     await axios\n  //         .get(\"https://cors-anywhere.herokuapp.com/api.cybercure.ai/feed/get_ips\")\n  //\n  //         .then(response => {\n  //             //let first_ip = response.data.data.ip[0];\n  //             let all_ips = response.data.data.ip;\n  //\n  //             console.log(\"all_ips = \" + all_ips[0]);\n  //\n  //             this.setState({\n  //                 ip_addresses: all_ips\n  //             })\n  //         });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.ip_addresses ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"First IP: \", this.state.ip_addresses[0]) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default IPAddresses;","map":{"version":3,"sources":["/home/evan/Desktop/Cyber-Threat-Visualization/client/src/IPAddresses.js"],"names":["React","Component","axios","IPAddresses","state","ip_addresses","fetchIPs","get","then","response","all_ips","data","console","log","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACJC,MAAAA,YAAY,EAAE;AADV,KADwB;;AAAA,SA0BhCC,QA1BgC,GA0BrB,YAAY;AACnB,YAAMJ,KAAK,CACNK,GADC,CACG,iCADH,EAGDC,IAHC,CAGIC,QAAQ,IAAI;AACd;AACA;AAEA,YAAIC,OAAO,GAAGD,QAAQ,CAACE,IAAvB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,OAA3B;AAEA,aAAKI,QAAL,CAAc;AACVT,UAAAA,YAAY,EAAEK;AADJ,SAAd;AAGH,OAdC,CAAN;AAeH,KA1C+B;AAAA;;AAKhCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL;AACH,GAP+B,CAShC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAoBAU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,KAAL,CAAWC,YAAX,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKD,KAAL,CAAWC,YAAX,CAAwB,CAAxB,CAAd,CAA1B,GAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/E,CADJ;AAKH;;AAlD+B;;AAqDpC,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nclass IPAddresses extends Component {\n    state = {\n        ip_addresses: null\n    };\n\n    componentDidMount() {\n        this.fetchIPs();\n    }\n\n    // oldFetchIPs = async () => {\n    //\n    //     await axios\n    //         .get(\"https://cors-anywhere.herokuapp.com/api.cybercure.ai/feed/get_ips\")\n    //\n    //         .then(response => {\n    //             //let first_ip = response.data.data.ip[0];\n    //             let all_ips = response.data.data.ip;\n    //\n    //             console.log(\"all_ips = \" + all_ips[0]);\n    //\n    //             this.setState({\n    //                 ip_addresses: all_ips\n    //             })\n    //         });\n    // };\n\n    fetchIPs = async () => {\n        await axios\n            .get(\"http://localhost:5000/fetch_ips\")\n\n            .then(response => {\n                //let first_ip = response.data.data.ip[0];\n                // let all_ips = response['all_ip_addresses'];\n\n                let all_ips = response.data\n\n                console.log(\"all_ips = \" + all_ips);\n\n                this.setState({\n                    ip_addresses: all_ips\n                })\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.ip_addresses ? <p>First IP: {this.state.ip_addresses[0]}</p> : <div/>}\n            </div>\n        );\n    }\n}\n\nexport default IPAddresses;\n"]},"metadata":{},"sourceType":"module"}