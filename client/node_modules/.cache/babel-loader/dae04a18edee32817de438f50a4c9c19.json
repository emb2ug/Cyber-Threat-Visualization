{"ast":null,"code":"var _jsxFileName = \"/home/evan/Desktop/Cyber-Threat-Visualization/client/src/IPAddresses.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass IPAddresses extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ip_addresses: null,\n      location_data: null,\n      done_loading_data: false\n    };\n\n    this.afterDataLoaded = () => {\n      this.setState({\n        done_loading_data: true\n      });\n    };\n\n    this.fetchDataForIPs = async () => {\n      let all_ips = null;\n      let all_location_data = null;\n      await axios.get(\"http://localhost:5000/fetch_ips\").then(response => {\n        all_ips = response.data;\n        console.log(\"all_ips = \" + all_ips);\n        all_location_data = [];\n        all_ips.map(ip => {\n          axios.get(\"http://localhost:5000/fetch_data_by_ip/\" + ip).then(response => {\n            console.log(response.data);\n            all_location_data.push(response.data);\n          }).catch();\n        });\n      }).then(() => {\n        this.setState({\n          ip_addresses: all_ips,\n          location_data: all_location_data\n        }, afterDataLoaded());\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDataForIPs();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.ip_addresses ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"First IP: \", this.state.ip_addresses[0]) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default IPAddresses; // call fetchIPs to get list of all 100 IP addresses\n// in .then of that axios call, map over IPs and hit backend again using fetch_data_by_ip endpoint","map":{"version":3,"sources":["/home/evan/Desktop/Cyber-Threat-Visualization/client/src/IPAddresses.js"],"names":["React","Component","axios","IPAddresses","state","ip_addresses","location_data","done_loading_data","afterDataLoaded","setState","fetchDataForIPs","all_ips","all_location_data","get","then","response","data","console","log","map","ip","push","catch","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,aAAa,EAAE,IAFX;AAGJC,MAAAA,iBAAiB,EAAE;AAHf,KADwB;;AAAA,SAWhCC,eAXgC,GAWd,MAAM;AACpB,WAAKC,QAAL,CAAc;AACVF,QAAAA,iBAAiB,EAAE;AADT,OAAd;AAGH,KAf+B;;AAAA,SAiBhCG,eAjBgC,GAiBd,YAAY;AAC1B,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,iBAAiB,GAAG,IAAxB;AACA,YAAMV,KAAK,CACNW,GADC,CACG,iCADH,EAGDC,IAHC,CAGIC,QAAQ,IAAI;AACdJ,QAAAA,OAAO,GAAGI,QAAQ,CAACC,IAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeP,OAA3B;AAEAC,QAAAA,iBAAiB,GAAG,EAApB;AACAD,QAAAA,OAAO,CAACQ,GAAR,CAAYC,EAAE,IAAI;AACdlB,UAAAA,KAAK,CACAW,GADL,CACS,4CAA4CO,EADrD,EAEKN,IAFL,CAEUC,QAAQ,IAAI;AACdE,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACAJ,YAAAA,iBAAiB,CAACS,IAAlB,CAAuBN,QAAQ,CAACC,IAAhC;AAEH,WANL,EAOKM,KAPL;AAQH,SATD;AAYH,OApBC,EAqBDR,IArBC,CAqBI,MAAM;AACR,aAAKL,QAAL,CAAc;AACVJ,UAAAA,YAAY,EAAEM,OADJ;AAEVL,UAAAA,aAAa,EAAEM;AAFL,SAAd,EAGGJ,eAAe,EAHlB;AAIH,OA1BC,CAAN;AA2BH,KA/C+B;AAAA;;AAOhCe,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,eAAL;AACH;;AAwCDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWC,YAAX,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKD,KAAL,CAAWC,YAAX,CAAwB,CAAxB,CAAd,CAA1B,GAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/E,CADJ;AAYH;;AA9D+B;;AAiEpC,eAAeF,WAAf,C,CAGA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nclass IPAddresses extends Component {\n    state = {\n        ip_addresses: null,\n        location_data: null,\n        done_loading_data: false\n    };\n\n    componentDidMount() {\n        this.fetchDataForIPs();\n    }\n\n    afterDataLoaded = () => {\n        this.setState({\n            done_loading_data: true\n        })\n    }\n\n    fetchDataForIPs = async () => {\n        let all_ips = null\n        let all_location_data = null\n        await axios\n            .get(\"http://localhost:5000/fetch_ips\")\n\n            .then(response => {\n                all_ips = response.data\n                console.log(\"all_ips = \" + all_ips);\n\n                all_location_data = []\n                all_ips.map(ip => {\n                    axios\n                        .get(\"http://localhost:5000/fetch_data_by_ip/\" + ip)\n                        .then(response => {\n                            console.log(response.data)\n                            all_location_data.push(response.data)\n\n                        })\n                        .catch()\n                })\n\n\n            })\n            .then(() => {\n                this.setState({\n                    ip_addresses: all_ips,\n                    location_data: all_location_data\n                }, afterDataLoaded())\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.ip_addresses ? <p>First IP: {this.state.ip_addresses[0]}</p> : <div/>}\n                {/*{this.state.location_data ?*/}\n                {/*    <p>*/}\n                {/*        First Lat/Long: {this.state.location_data[0].latitude},*/}\n                {/*        {this.state.location_data[0].longitude}*/}\n                {/*    </p>*/}\n                {/*    : <div/>}*/}\n\n            </div>\n        );\n    }\n}\n\nexport default IPAddresses;\n\n\n// call fetchIPs to get list of all 100 IP addresses\n// in .then of that axios call, map over IPs and hit backend again using fetch_data_by_ip endpoint\n"]},"metadata":{},"sourceType":"module"}